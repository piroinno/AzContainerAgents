jobs:
  - job: AspNetCore
    pool:
      vmImage: 'ubuntu-20.04'
    container:
        image: mcr.microsoft.com/dotnet/sdk:3.1
    steps:
      - task: DotNetCoreCLI@2
        displayName: build
        inputs:
          command: 'build'
          arguments: '-c $(buildConfiguration)'
          projects: "**/*.sln"
          zipAfterPublish: True

      - task: DotNetCoreCLI@2
        displayName: test
        inputs:
          command: test
          projects: '**/*Tests/*.csproj'
          arguments: '-c $(buildConfiguration)'

      - task: DotNetCoreCLI@2
        displayName: 'publish'
        inputs:
          command: 'publish'
          publishWebProjects: false
          projects: '**/*.csproj'
          arguments: '-o $(Build.ArtifactStagingDirectory)/'
          zipAfterPublish: true
          modifyOutputPath: true
          
      # - task: ArchiveFiles@2
      #   displayName: 'Archive FastCarzWebApp'
      #   inputs:
      #     rootFolderOrFile: $(System.DefaultWorkingDirectory)/app/DevOpsTest/FastCarzWebApp/bin/$(BuildConfiguration)/netcoreapp3.1/FastCarzWebApp*.dll
      #     includeRootFolder: false
      #     archiveFile: '$(Build.ArtifactStagingDirectory)/FastCarzWebApp.zip'

      # - task: ArchiveFiles@2
      #   displayName: 'Archive FastCarzWebApi'
      #   inputs:
      #     rootFolderOrFile: $(System.DefaultWorkingDirectory)/app/DevOpsTest/FastCarzWebApi/bin/$(BuildConfiguration)/netcoreapp3.1/FastCarzWebApi*.dll
      #     includeRootFolder: false
      #     archiveFile: '$(Build.ArtifactStagingDirectory)/FastCarzWebApi.zip'

      - task: PublishBuildArtifacts@1
        displayName: "Publish"
        inputs:
          PathtoPublish: "$(build.artifactstagingdirectory)"
          ArtifactName: "$(ArtifactName)"
          FileCopyOptions: "/XF *test* "
        condition: succeededOrFailed()
